//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   float4x4 inverse_view;             // Offset:    0 Size:    64
//   float4x4 inverse_projection;       // Offset:   64 Size:    64
//   float4 eye_pos;                    // Offset:  128 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerFrame                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// NORMAL                   0   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xy
dcl_output o3.xyzw
dcl_temps 2
mov o0.xyz, v0.xyzx
mov o0.w, l(1.000000)
mul r0.xyzw, v0.yyyy, cb0[5].xyzw
mad r0.xyzw, cb0[4].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb0[6].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[7].xyzw
div r0.xyzw, r0.xyzw, r0.wwww
mul r1.xyz, r0.yyyy, cb0[1].xyzx
mad r1.xyz, cb0[0].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb0[2].xyzx, r0.zzzz, r1.xyzx
mad o1.xyz, cb0[3].xyzx, r0.wwww, r0.xyzx
mov o2.xy, v2.xyxx
mov o3.xyzw, v1.xyzw
ret 
// Approximately 14 instruction slots used
