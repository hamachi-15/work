//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   float4x4 inverse_view;             // Offset:    0 Size:    64 [unused]
//   float4x4 inverse_projection;       // Offset:   64 Size:    64 [unused]
//   float4 eye_pos;                    // Offset:  128 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// CBPerFrame                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.world_pos.x; v1.y <- input.world_pos.y; v1.z <- input.world_pos.z; 
//   v2.x <- input.texcoord.x; v2.y <- input.texcoord.y; 
//   v3.x <- input.color.x; v3.y <- input.color.y; v3.z <- input.color.z; v3.w <- input.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "E:\就職作品\ライブラリ\Game\HLSL\SkyBox_ps.hlsl"
mov r0.xyz, -cb0[8].xyzx
add r0.xyz, r0.xyzx, v1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- E.x; r0.y <- E.y; r0.z <- E.z

#line 6
nop 
mov r0.xyz, r0.xyzx

#line 45 "E:\就職作品\ライブラリ\Game\HLSL\SkyBox.hlsli"
mov r0.w, -r0.z
max r0.w, r0.w, r0.z
mov r1.x, -r0.x
max r1.y, r0.x, r1.x
min r1.z, r0.w, r1.y
max r1.w, r0.w, r1.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r1.z, r1.w, r1.z
mul r1.w, r1.z, r1.z
mul r2.x, r1.w, l(0.020835)
add r2.x, r2.x, l(-0.085133)
mul r2.x, r1.w, r2.x
add r2.x, r2.x, l(0.180141)
mul r2.x, r1.w, r2.x
add r2.x, r2.x, l(-0.330299)
mul r1.w, r1.w, r2.x
add r1.w, r1.w, l(0.999866)
mul r1.z, r1.w, r1.z
lt r0.w, r1.y, r0.w
mul r1.y, r1.z, l(-2.000000)
add r1.y, r1.y, l(1.570796)
and r0.w, r0.w, r1.y
add r0.w, r1.z, r0.w
lt r1.x, r0.x, r1.x
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.x, r0.z
max r1.y, r0.x, r0.z
mov r1.z, -r1.x
lt r1.x, r1.x, r1.z
mov r1.z, -r1.y
ge r1.y, r1.y, r1.z
and r1.x, r1.y, r1.x
mov r1.y, -r0.w
movc r0.w, r1.x, r1.y, r0.w
mul r0.w, r0.w, l(0.159155)
add r0.w, r0.w, l(0.500000)
mov r0.w, -r0.w
add r1.x, r0.w, l(1.000000)  // r1.x <- tex.x

#line 46
dp2 r0.x, r0.xzxx, r0.xzxx
sqrt r0.x, r0.x
mov r0.z, -r0.y
max r0.z, r0.z, r0.y
mov r0.w, -r0.x
max r1.z, r0.w, r0.x
min r1.w, r0.z, r1.z
max r2.x, r0.z, r1.z
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r1.w, r1.w, r2.x
mul r2.x, r1.w, r1.w
mul r2.y, r2.x, l(0.020835)
add r2.y, r2.y, l(-0.085133)
mul r2.y, r2.y, r2.x
add r2.y, r2.y, l(0.180141)
mul r2.y, r2.y, r2.x
add r2.y, r2.y, l(-0.330299)
mul r2.x, r2.y, r2.x
add r2.x, r2.x, l(0.999866)
mul r1.w, r1.w, r2.x
lt r0.z, r1.z, r0.z
mul r1.z, r1.w, l(-2.000000)
add r1.z, r1.z, l(1.570796)
and r0.z, r0.z, r1.z
add r0.z, r1.w, r0.z
lt r0.w, r0.x, r0.w
and r0.w, r0.w, l(0xc0490fdb)
add r0.z, r0.w, r0.z
min r0.w, r0.x, r0.y
max r0.x, r0.x, r0.y
mov r0.y, -r0.w
lt r0.y, r0.w, r0.y
mov r0.w, -r0.x
ge r0.x, r0.x, r0.w
and r0.x, r0.x, r0.y
mov r0.y, -r0.z
movc r0.x, r0.x, r0.y, r0.z
mul r0.x, r0.x, l(-0.318310)
add r1.y, r0.x, l(0.500000)  // r1.y <- tex.y

#line 48
mov r1.x, r1.x  // r1.x <- <EquirectangularProjection return value>.x
mov r1.y, r1.y  // r1.y <- <EquirectangularProjection return value>.y

#line 6 "E:\就職作品\ライブラリ\Game\HLSL\SkyBox_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r1.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 7
mov o0.xyzw, r0.xyzw
ret 
// Approximately 90 instruction slots used
