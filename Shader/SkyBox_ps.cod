//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   float4x4 inverse_view;             // Offset:    0 Size:    64 [unused]
//   float4x4 inverse_projection;       // Offset:   64 Size:    64 [unused]
//   float4 eye_pos;                    // Offset:  128 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// CBPerFrame                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 2
add r0.xyz, v1.zxyz, -cb0[8].zxyz
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
max r0.w, |r0.y|, |r0.x|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r1.x, |r0.y|, |r0.x|
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, r0.w
mad r1.y, r1.x, l(0.020835), l(-0.085133)
mad r1.y, r1.x, r1.y, l(0.180141)
mad r1.y, r1.x, r1.y, l(-0.330299)
mad r1.x, r1.x, r1.y, l(0.999866)
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(1.570796)
lt r1.z, |r0.y|, |r0.x|
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
lt r1.x, r0.y, -r0.y
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.y, r0.x
lt r1.x, r1.x, -r1.x
max r1.y, r0.y, r0.x
ge r1.y, r1.y, -r1.y
and r1.x, r1.y, r1.x
movc r0.w, r1.x, -r0.w, r0.w
mad r0.w, r0.w, l(0.159155), l(0.500000)
add r1.x, -r0.w, l(1.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
max r0.y, r0.x, |r0.z|
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
min r0.w, r0.x, |r0.z|
mul r0.y, r0.y, r0.w
mul r0.w, r0.y, r0.y
mad r1.z, r0.w, l(0.020835), l(-0.085133)
mad r1.z, r0.w, r1.z, l(0.180141)
mad r1.z, r0.w, r1.z, l(-0.330299)
mad r0.w, r0.w, r1.z, l(0.999866)
mul r1.z, r0.w, r0.y
mad r1.z, r1.z, l(-2.000000), l(1.570796)
lt r1.w, r0.x, |r0.z|
and r1.z, r1.w, r1.z
mad r0.y, r0.y, r0.w, r1.z
min r0.w, r0.x, r0.z
max r0.x, r0.x, r0.z
ge r0.x, r0.x, -r0.x
lt r0.z, r0.w, -r0.w
and r0.x, r0.x, r0.z
movc r0.x, r0.x, -r0.y, r0.y
mad r1.y, r0.x, l(-0.318310), l(0.500000)
sample_indexable(texture2d)(float,float,float,float) o0.xyzw, r1.xyxx, t0.xyzw, s0
ret 
// Approximately 54 instruction slots used
