//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4x4 view_mat[6];              // Offset:   64 Size:   384 [unused]
//   float4x4 projection;               // Offset:  448 Size:    64 [unused]
//   float4 light_color;                // Offset:  512 Size:    16 [unused]
//   float4 light_direction;            // Offset:  528 Size:    16 [unused]
//   float4 ambient_color;              // Offset:  544 Size:    16 [unused]
//   float4 eye_pos;                    // Offset:  560 Size:    16 [unused]
//   float wave_time;                   // Offset:  576 Size:     4 [unused]
//   float dummy1;                      // Offset:  580 Size:     4 [unused]
//   float dummy2;                      // Offset:  584 Size:     4 [unused]
//   float dummy3;                      // Offset:  588 Size:     4 [unused]
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 bone_transforms[128];// Offset:    0 Size:  8192
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
// WEIGHTS                  0   xyzw        4     NONE   float   xyzw
// BONES                    0   xyzw        5     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[511], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_temps 3
ishl r0.xyzw, v5.xyzw, l(2, 2, 2, 2)
mul r1.xyz, v0.yyyy, cb1[r0.y + 1].xyzx
mad r1.xyz, v0.xxxx, cb1[r0.y + 0].xyzx, r1.xyzx
mad r1.xyz, v0.zzzz, cb1[r0.y + 2].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v4.yyyy
mul r2.xyz, v0.yyyy, cb1[r0.x + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.x + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.x + 2].xyzx, r2.xyzx
mad r1.xyz, v4.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb1[r0.z + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.z + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.z + 2].xyzx, r2.xyzx
mad r1.xyz, v4.zzzz, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb1[r0.w + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.w + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.w + 2].xyzx, r2.xyzx
mad r1.xyz, v4.wwww, r2.xyzx, r1.xyzx
mul r2.xyzw, r1.yyyy, cb0[1].xyzw
mad r2.xyzw, r1.xxxx, cb0[0].xyzw, r2.xyzw
mad r2.xyzw, r1.zzzz, cb0[2].xyzw, r2.xyzw
mov o3.xyz, r1.xyzx
add o0.xyzw, r2.xyzw, cb0[3].xyzw
mov o1.xyzw, v3.xyzw
mul r1.xyz, v1.yyyy, cb1[r0.y + 1].xyzx
mad r1.xyz, v1.xxxx, cb1[r0.y + 0].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb1[r0.y + 2].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v4.yyyy
mul r2.xyz, v1.yyyy, cb1[r0.x + 1].xyzx
mad r2.xyz, v1.xxxx, cb1[r0.x + 0].xyzx, r2.xyzx
mad r2.xyz, v1.zzzz, cb1[r0.x + 2].xyzx, r2.xyzx
mad r1.xyz, v4.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v1.yyyy, cb1[r0.z + 1].xyzx
mad r2.xyz, v1.xxxx, cb1[r0.z + 0].xyzx, r2.xyzx
mad r0.xyz, v1.zzzz, cb1[r0.z + 2].xyzx, r2.xyzx
mad r0.xyz, v4.zzzz, r0.xyzx, r1.xyzx
mul r1.xyz, v1.yyyy, cb1[r0.w + 1].xyzx
mad r1.xyz, v1.xxxx, cb1[r0.w + 0].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb1[r0.w + 2].xyzx, r1.xyzx
mad r0.xyz, v4.wwww, r1.xyzx, r0.xyzx
mov o2.xyz, r0.xyzx
mov o4.xy, v2.xyxx
mul r1.xyz, r0.yzxy, l(0.001000, 0.000000, 1.000000, 0.000000)
mad r1.xyz, r0.zxyz, l(1.000000, 0.001000, 0.000000, 0.000000), -r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov o5.xyz, r1.xyzx
mul r2.xyz, r0.zxyz, r1.yzxy
mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
mov o7.xyz, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o6.xyz, r0.xxxx, r1.xyzx
ret 
// Approximately 54 instruction slots used
