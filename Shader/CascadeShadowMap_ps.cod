//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBScene
// {
//
//   row_major float4x4 light_view_projection[3];// Offset:    0 Size:   192
//   row_major float4x4 view_projection;// Offset:  192 Size:    64 [unused]
//   float4 light_direction;            // Offset:  256 Size:    16
//   float4 eye_pos;                    // Offset:  272 Size:    16
//   float4 shadow_parameter;           // Offset:  288 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// shadow_sampler                    sampler      NA          NA             s3      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// shadow_texture1                   texture  float4          2d             t3      1 
// shadow_texture2                   texture  float4          2d             t4      1 
// shadow_texture3                   texture  float4          2d             t5      1 
// CBScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx
add r2.xyz, -v3.xyzx, cb0[17].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r2.w, r1.w
dp3 r3.x, cb0[16].xyzx, cb0[16].xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, cb0[16].xyzx
dp3 r3.w, r1.xyzx, -r3.xyzx
max r3.w, r3.w, l(0.000000)
mad r2.xyz, r2.xyzx, r2.wwww, -r3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r1.x, r2.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.x
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mad r1.x, r1.x, r1.y, r3.w
add r2.xyz, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r2.w, l(1.000000)
mul r2.xyzw, r2.xyzw, v1.xyzw
mul r0.xyzw, r0.xyzw, r2.xyzw
sqrt r1.x, r1.w
add r1.x, r1.x, l(-500.000000)
mul_sat r1.x, r1.x, l(0.005000)
add r1.y, -r1.x, l(1.000000)
mul r1.xzw, r1.xxxx, l(0.000000, 0.000000, 0.000000, 0.500000)
mad r0.xyz, r0.xyzx, r1.yyyy, r1.xzwx
mul r1.xyzw, v3.yyyy, cb0[1].xyzw
mad r1.xyzw, v3.xxxx, cb0[0].xyzw, r1.xyzw
mad r1.xyzw, v3.zzzz, cb0[2].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb0[3].xyzw
div r1.xyz, r1.xyzx, r1.wwww
mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
ge r1.w, r1.z, l(0.000000)
ge r2.x, l(1.000000), r1.z
and r1.w, r1.w, r2.x
ge r2.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.w, r1.w, r2.x
ge r2.xz, l(1.000000, 0.000000, 1.000000, 0.000000), r1.xxyx
and r1.w, r1.w, r2.x
and r1.w, r2.y, r1.w
and r1.w, r2.z, r1.w
if_nz r1.w
  sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t3.xyzw, s3
  add r1.x, -r1.x, r1.z
  lt r1.x, cb0[18].w, r1.x
  movc r1.xyz, r1.xxxx, cb0[18].xyzx, l(1.000000,1.000000,1.000000,0)
endif 
if_z r1.w
  mul r2.xyzw, v3.yyyy, cb0[5].xyzw
  mad r2.xyzw, v3.xxxx, cb0[4].xyzw, r2.xyzw
  mad r2.xyzw, v3.zzzz, cb0[6].xyzw, r2.xyzw
  add r2.xyzw, r2.xyzw, cb0[7].xyzw
  div r2.xyz, r2.xyzx, r2.wwww
  mad r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  ge r2.w, r2.z, l(0.000000)
  ge r3.x, l(1.000000), r2.z
  and r2.w, r2.w, r3.x
  ge r3.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r2.w, r2.w, r3.x
  ge r3.xz, l(1.000000, 0.000000, 1.000000, 0.000000), r2.xxyx
  and r2.w, r2.w, r3.x
  and r2.w, r3.y, r2.w
  and r2.w, r3.z, r2.w
  if_nz r2.w
    sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t4.xyzw, s3
    add r2.x, -r2.x, r2.z
    lt r2.x, cb0[18].w, r2.x
    movc r1.xyz, r2.xxxx, cb0[18].xyzx, l(1.000000,1.000000,1.000000,0)
  endif 
  mov r1.w, r2.w
else 
  mov r2.w, l(-1)
endif 
not r2.x, r2.w
not r2.y, r1.w
and r2.x, r2.y, r2.x
if_nz r2.x
  mul r2.xyzw, v3.yyyy, cb0[9].xyzw
  mad r2.xyzw, v3.xxxx, cb0[8].xyzw, r2.xyzw
  mad r2.xyzw, v3.zzzz, cb0[10].xyzw, r2.xyzw
  add r2.xyzw, r2.xyzw, cb0[11].xyzw
  div r2.xyz, r2.xyzx, r2.wwww
  mad r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  ge r2.w, r2.z, l(0.000000)
  ge r3.x, l(1.000000), r2.z
  and r2.w, r2.w, r3.x
  ge r3.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r2.w, r2.w, r3.x
  ge r3.xz, l(1.000000, 0.000000, 1.000000, 0.000000), r2.xxyx
  and r2.w, r2.w, r3.x
  and r2.w, r3.y, r2.w
  and r1.w, r3.z, r2.w
  if_nz r1.w
    sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t5.xyzw, s3
    add r2.x, -r2.x, r2.z
    lt r2.x, cb0[18].w, r2.x
    movc r1.xyz, r2.xxxx, cb0[18].xyzx, l(1.000000,1.000000,1.000000,0)
  endif 
endif 
movc r1.xyz, r1.wwww, r1.xyzx, l(1.000000,1.000000,1.000000,0)
mul o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Approximately 110 instruction slots used
