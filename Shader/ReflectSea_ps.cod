//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4x4 view_mat[6];              // Offset:   64 Size:   384 [unused]
//   float4x4 projection;               // Offset:  448 Size:    64 [unused]
//   float4 light_color;                // Offset:  512 Size:    16
//   float4 light_direction;            // Offset:  528 Size:    16
//   float4 ambient_color;              // Offset:  544 Size:    16 [unused]
//   float4 eye_pos;                    // Offset:  560 Size:    16
//   float wave_time;                   // Offset:  576 Size:     4
//   float dummy1;                      // Offset:  580 Size:     4 [unused]
//   float dummy2;                      // Offset:  584 Size:     4 [unused]
//   float dummy3;                      // Offset:  588 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// wrap_sampler                      sampler      NA          NA             s2      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// cube_texture                      texture  float4        cube             t1      1 
// normal_texture                    texture  float4          2d             t2      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[37], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 11
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Color.x; v1.y <- input.Color.y; v1.z <- input.Color.z; v1.w <- input.Color.w; 
//   v2.x <- input.wNormal.x; v2.y <- input.wNormal.y; v2.z <- input.wNormal.z; 
//   v3.x <- input.wPosition.x; v3.y <- input.wPosition.y; v3.z <- input.wPosition.z; 
//   v4.x <- input.Tex.x; v4.y <- input.Tex.y; 
//   v5.x <- input.vT.x; v5.y <- input.vT.y; v5.z <- input.vT.z; 
//   v6.x <- input.vB.x; v6.y <- input.vB.y; v6.z <- input.vB.z; 
//   v7.x <- input.vN.x; v7.y <- input.vN.y; v7.z <- input.vN.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 17 "E:\就職作品\ライブラリ\Game\HLSL\ReflectSea.hlsli"
mov r0.xy, l(0.005000,0.001000,0,0)  // r0.x <- wave1.x; r0.y <- wave1.y

#line 18
mov r0.zw, l(0,0,-0.005000,0.016000)  // r0.z <- wave2.x; r0.w <- wave2.y

#line 20
mov r1.x, l(1.000000)  // r1.x <- wave_size

#line 22
mov r1.y, l(0.010000)  // r1.y <- fluctuation

#line 8 "E:\就職作品\ライブラリ\Game\HLSL\ReflectSea_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v4.xyxx, t0.xyzw, s0  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z; r2.w <- color.w

#line 9
mov r3.xyz, -cb0[35].xyzx
add r3.xyz, r3.xyzx, v3.xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx  // r3.x <- E.x; r3.y <- E.y; r3.z <- E.z

#line 10
dp3 r1.z, v2.xyzx, v2.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, v2.xyzx  // r4.x <- N.x; r4.y <- N.y; r4.z <- N.z

#line 11
dp3 r1.z, cb0[33].xyzx, cb0[33].xyzx
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, cb0[33].xyzx  // r5.x <- L.x; r5.y <- L.y; r5.z <- L.z

#line 12
mov r6.xyz, cb0[32].xyzx  // r6.x <- C.x; r6.y <- C.y; r6.z <- C.z

#line 14
mul r1.xz, r1.xxxx, v4.xxyx  // r1.x <- Tex.x; r1.z <- Tex.y

#line 17
mul r0.xy, r0.xyxx, cb0[36].xxxx
add r0.xy, r0.xyxx, r1.xzxx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r0.xyxx, t2.xyzw, s2
mov r7.xyz, r7.xyzx  // r7.x <- N1.x; r7.y <- N1.y; r7.z <- N1.z

#line 18
mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r8.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r7.xyz, r7.xyzx, r8.xyzx

#line 20
mul r0.xy, r0.zwzz, cb0[36].xxxx
add r0.xy, r0.xyxx, r1.xzxx
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t2.xyzw, s2
mov r0.xyz, r0.xyzx  // r0.x <- N2.x; r0.y <- N2.y; r0.z <- N2.z

#line 21
mul r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r1.xzw, l(-1.000000,-0.000000,-1.000000,-1.000000)
add r0.xyz, r0.xyzx, r1.xzwx

#line 24
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r1.xzw, r0.wwww, v5.xxyz  // r1.x <- vx.x; r1.z <- vx.y; r1.w <- vx.z

#line 25
dp3 r0.w, v6.xyzx, v6.xyzx
rsq r0.w, r0.w
mul r8.xyz, r0.wwww, v6.xyzx  // r8.x <- vy.x; r8.y <- vy.y; r8.z <- vy.z

#line 26
dp3 r0.w, v7.xyzx, v7.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, v7.xyzx  // r9.x <- vz.x; r9.y <- vz.y; r9.z <- vz.z

#line 28
add r0.xyz, r0.xyzx, r7.xyzx  // r0.x <- wave_normal.x; r0.y <- wave_normal.y; r0.z <- wave_normal.z

#line 31
mov r7.x, r1.x  // r7.x <- mat._m00
mov r7.y, r8.x  // r7.y <- mat._m10
mov r7.z, r9.x  // r7.z <- mat._m20
mov r10.x, r1.z  // r10.x <- mat._m01
mov r10.y, r8.y  // r10.y <- mat._m11
mov r10.z, r9.y  // r10.z <- mat._m21
mov r9.x, r1.w  // r9.x <- mat._m02
mov r9.y, r8.z  // r9.y <- mat._m12
mov r9.z, r9.z  // r9.z <- mat._m22

#line 34
dp3 r7.x, r0.xyzx, r7.xyzx
dp3 r7.y, r0.xyzx, r10.xyzx
dp3 r7.z, r0.xyzx, r9.xyzx
dp3 r0.x, r7.xyzx, r7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r7.xyzx  // r0.x <- wave_normal.x

#line 36
itof r1.xzw, l(1, 0, 1, 1)  // r1.x <- KS.x; r1.z <- KS.y; r1.w <- KS.z

#line 37
nop 
mov r0.xyz, r0.xyzx
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx
mov r7.xyz, -r3.xyzx
mov r1.xzw, r1.xxzw

#line 49 "E:\就職作品\ライブラリ\Game\HLSL\Func.hlsli"
dp3 r0.w, r5.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mov r0.w, -r0.w
mul r8.xyz, r0.wwww, r0.xyzx
add r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- R.x; r5.y <- R.y; r5.z <- R.z

#line 50
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx

#line 51
dp3 r5.z, r5.xyzx, r7.xyzx
mov r5.xyz, r5.zzzz  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z

#line 52
itof r7.xyz, l(0, 0, 0, 0)
max r5.xyz, r5.xyzx, r7.xyzx

#line 53
mov r7.xyz, l(1.000000,1.000000,1.000000,0)
mul r5.xyz, r5.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, r5.xyzx
mul r7.xyz, r5.xyzx, r7.xyzx
mul r5.xyz, r5.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z

#line 54
mul r1.xzw, r1.xxzw, r5.xxyz
mul r1.xzw, r6.xxyz, r1.xxzw  // r1.x <- S.x; r1.z <- S.y; r1.w <- S.z

#line 55
mov r1.xzw, r1.xxzw  // r1.x <- <PhongSpecular return value>.x; r1.z <- <PhongSpecular return value>.y; r1.w <- <PhongSpecular return value>.z

#line 37 "E:\就職作品\ライブラリ\Game\HLSL\ReflectSea_ps.hlsl"
mov r1.xzw, r1.xxzw  // r1.x <- S.x; r1.z <- S.y; r1.w <- S.z

#line 41
dp3 r0.w, r3.xyzx, r4.xyzx
add r0.w, r0.w, r0.w
mov r0.w, -r0.w
mul r5.xyz, r0.wwww, r4.xyzx
add r5.xyz, r3.xyzx, r5.xyzx  // r5.x <- R1.x; r5.y <- R1.y; r5.z <- R1.z

#line 44
mov r3.xyz, -r3.xyzx
dp3 r0.w, r3.xyzx, r4.xyzx
add r0.w, r0.w, l(0.200000)
max r0.w, r0.w, l(0.000000)
min r0.w, r0.w, l(1.000000)  // r0.w <- ratio

#line 45
mul r0.xyz, r1.yyyy, r0.xyzx
add r0.xyz, r0.xyzx, r5.xyzx  // r0.x <- R1.x; r0.y <- R1.y; r0.z <- R1.z

#line 46
mul r2.xyz, r0.wwww, r2.xyzx
sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
mov r0.w, -r0.w
add r0.w, r0.w, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
add r0.xyz, r0.xyzx, r2.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 47
add r0.xyz, r1.xzwx, r0.xyzx

#line 49
mov o0.xyz, r0.xyzx
mov o0.w, r2.w
ret 
// Approximately 109 instruction slots used
