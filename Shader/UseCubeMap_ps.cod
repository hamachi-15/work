//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 light_color;                // Offset:   64 Size:    16 [unused]
//   float4 light_direction;            // Offset:   80 Size:    16 [unused]
//   float4 ambient_color;              // Offset:   96 Size:    16 [unused]
//   float4 eye_pos;                    // Offset:  112 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// cube_texture                      texture  float4        cube             t1      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 4
add r0.xyz, v3.xyzx, -cb0[7].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
mad r1.w, -r0.w, r0.w, l(1.000000)
mad r1.w, -r1.w, l(0.444444), l(1.000000)
sqrt r2.x, r1.w
ge r1.w, r1.w, l(0.000000)
mad r2.x, r0.w, l(0.666667), r2.x
add r0.w, r0.w, r0.w
mad r2.yzw, r1.xxyz, -r0.wwww, r0.xxyz
sample_indexable(texturecube)(float,float,float,float) r2.yzw, r2.yzwy, t1.wxyz, s0
mul r3.xyz, r1.xyzx, r2.xxxx
dp3 r0.w, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000), -r3.xyzx
and r0.xyz, r0.xyzx, r1.wwww
sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
mad r1.x, -r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, r0.w
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v4.xyxx, t0.xyzw, s0
mad r1.xyz, r2.yzwy, r1.xxxx, r3.xyzx
mov o0.w, r3.w
mad o0.xyz, r0.xyzx, r0.wwww, r1.xyzx
ret 
// Approximately 28 instruction slots used
