//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 light_color;                // Offset:   64 Size:    16 [unused]
//   float4 light_direction;            // Offset:   80 Size:    16 [unused]
//   float4 ambient_color;              // Offset:   96 Size:    16 [unused]
//   float4 eye_pos;                    // Offset:  112 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// cube_texture                      texture  float4        cube             t1      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.color.x; v1.y <- input.color.y; v1.z <- input.color.z; v1.w <- input.color.w; 
//   v2.x <- input.wnormal.x; v2.y <- input.wnormal.y; v2.z <- input.wnormal.z; 
//   v3.x <- input.wposition.x; v3.y <- input.wposition.y; v3.z <- input.wposition.z; 
//   v4.x <- input.texcoord.x; v4.y <- input.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 4 "E:\就職作品\ライブラリ\Game\HLSL\UseCubeMap_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 5
mov r1.xyz, -cb0[7].xyzx
add r1.xyz, r1.xyzx, v3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z

#line 6
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v2.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 9
dp3 r1.w, r1.xyzx, r2.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r3.xyz, r1.wwww, r2.xyzx
add r3.xyz, r1.xyzx, r3.xyzx  // r3.x <- R1.x; r3.y <- R1.y; r3.z <- R1.z

#line 13
dp3 r1.w, r1.xyzx, r2.xyzx
mul r2.w, r1.w, r1.w
mul r3.w, l(0.666667), l(0.666667)
mov r2.w, -r2.w
add r2.w, r2.w, l(1.000000)
mul r2.w, r2.w, r3.w
mov r2.w, -r2.w
add r2.w, r2.w, l(1.000000)
sqrt r3.w, r2.w
mul r1.w, r1.w, l(0.666667)
add r1.w, r3.w, r1.w
ge r2.w, r2.w, l(0.000000)
mul r4.xyz, r1.xyzx, l(0.666667, 0.666667, 0.666667, 0.000000)
mul r5.xyz, r2.xyzx, r1.wwww
mov r5.xyz, -r5.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // r4.x <- R2.x; r4.y <- R2.y; r4.z <- R2.z

#line 15
mov r1.xyz, -r1.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
mov r1.y, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y  // r1.x <- ratio

#line 16
sample_indexable(texturecube)(float,float,float,float) r1.yzw, r3.xyzx, t1.wxyz, s0
mov r2.x, -r1.x
add r2.x, r2.x, l(1.000000)
mul r1.yzw, r1.yyzw, r2.xxxx
add r0.xyz, r0.xyzx, r1.yzwy

#line 17
sample_indexable(texturecube)(float,float,float,float) r1.yzw, r4.xyzx, t1.wxyz, s0
mul r1.xyz, r1.xxxx, r1.yzwy
add r0.xyz, r0.xyzx, r1.xyzx

#line 19
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 47 instruction slots used
