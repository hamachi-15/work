//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// snthesis_texture                  texture  float4          2d             t1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.color.x; v1.y <- input.color.y; v1.z <- input.color.z; v1.w <- input.color.w; 
//   v2.x <- input.texcoord.x; v2.y <- input.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "E:\就職作品\ライブラリ\Game\HLSL\SnthesisTexture_ps.hlsl"
itof r0.xyzw, l(0, 0, 0, 0)  // r0.x <- result.x; r0.y <- result.y; r0.z <- result.z; r0.w <- result.w

#line 6
nop 
nop 
mov r1.xy, v2.xyxx

#line 29 "E:\就職作品\ライブラリ\Game\HLSL\SnthesisTexture.hlsli"
itof r2.xyzw, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z; r2.w <- output.w

#line 30
itof r1.z, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t0.xyzw, s0, r1.z
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z; r1.w <- output.w

#line 31
mov r1.xyzw, r1.xyzw  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z; r1.w <- <FetchColor return value>.w

#line 6 "E:\就職作品\ライブラリ\Game\HLSL\SnthesisTexture_ps.hlsl"
add r0.xyzw, r0.xyzw, r1.xyzw

#line 7
nop 
nop 
mov r1.xy, v2.xyxx

#line 29 "E:\就職作品\ライブラリ\Game\HLSL\SnthesisTexture.hlsli"
itof r2.xyzw, l(0, 0, 0, 0)  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z; r2.w <- output.w

#line 30
itof r1.z, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t1.xyzw, s0, r1.z
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- output.x; r1.y <- output.y; r1.z <- output.z; r1.w <- output.w

#line 31
mov r1.xyzw, r1.xyzw  // r1.x <- <FetchColor return value>.x; r1.y <- <FetchColor return value>.y; r1.z <- <FetchColor return value>.z; r1.w <- <FetchColor return value>.w

#line 7 "E:\就職作品\ライブラリ\Game\HLSL\SnthesisTexture_ps.hlsl"
add r0.xyzw, r0.xyzw, r1.xyzw

#line 9
mov o0.xyzw, r0.xyzw
ret 
// Approximately 21 instruction slots used
