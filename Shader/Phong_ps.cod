//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBScene
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 light_direction;            // Offset:   64 Size:    16
//   float4 light_color;                // Offset:   80 Size:    16
//   float4 eye_pos;                    // Offset:   96 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// CBScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.color.x; v1.y <- input.color.y; v1.z <- input.color.z; v1.w <- input.color.w; 
//   v2.x <- input.normal.x; v2.y <- input.normal.y; v2.z <- input.normal.z; 
//   v3.x <- input.wposition.x; v3.y <- input.wposition.y; v3.z <- input.wposition.z; 
//   v4.x <- input.texcoord.x; v4.y <- input.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "E:\就職作品\ライブラリ\DragonSlayer\HLSL\Phong_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 6
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 7
mov r2.xyz, -v3.xyzx
add r2.xyz, r2.xyzx, cb0[6].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 8
dp3 r1.w, cb0[4].xyzx, cb0[4].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb0[4].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 12
mov r4.xyz, l(0.500000,0.500000,0.500000,0)  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z

#line 15
mov r5.xyz, cb0[5].xyzx  // r5.x <- C.x; r5.y <- C.y; r5.z <- C.z

#line 16
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- Kd.x; r6.y <- Kd.y; r6.z <- Kd.z

#line 17
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx

#line 10 "E:\就職作品\ライブラリ\DragonSlayer\HLSL\Func.hlsli"
mov r7.xyz, -r3.xyzx
dp3 r1.w, r1.xyzx, r7.xyzx  // r1.w <- D

#line 11
itof r2.w, l(0)
max r1.w, r1.w, r2.w

#line 12
mul r6.xyz, r5.xyzx, r6.xyzx
mul r6.xyz, r1.wwww, r6.xyzx  // r6.x <- <Diffuse return value>.x; r6.y <- <Diffuse return value>.y; r6.z <- <Diffuse return value>.z

#line 17 "E:\就職作品\ライブラリ\DragonSlayer\HLSL\Phong_ps.hlsl"
mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z

#line 20
itof r7.xyz, l(1, 1, 1, 0)  // r7.x <- Ks.x; r7.y <- Ks.y; r7.z <- Ks.z

#line 21
nop 
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, r7.xyzx
itof r1.w, l(100)

#line 33 "E:\就職作品\ライブラリ\DragonSlayer\HLSL\Func.hlsli"
mov r3.xyz, -r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx  // r2.x <- H.x; r2.y <- H.y; r2.z <- H.z

#line 35
dp3 r1.z, r2.xyzx, r1.xyzx
mov r1.xyz, r1.zzzz  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 36
itof r2.xyz, l(0, 0, 0, 0)
max r1.xyz, r1.xyzx, r2.xyzx

#line 37
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, r1.wwww
exp r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 38
mul r1.xyz, r7.xyzx, r1.xyzx
mul r1.xyz, r5.xyzx, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 40
mov r1.xyz, r1.xyzx  // r1.x <- <BlinnPhongSpecular return value>.x; r1.y <- <BlinnPhongSpecular return value>.y; r1.z <- <BlinnPhongSpecular return value>.z

#line 21 "E:\就職作品\ライブラリ\DragonSlayer\HLSL\Phong_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z

#line 22
add r2.xyz, r4.xyzx, r6.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mov r1.w, l(1.000000)
mul r1.xyzw, r1.xyzw, v1.xyzw
mul r0.xyzw, r0.xyzw, r1.xyzw

#line 24
mov o0.xyzw, r0.xyzw
ret 
// Approximately 58 instruction slots used
