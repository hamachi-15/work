//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBBuffer
// {
//
//   float timer;                       // Offset:    0 Size:     4
//   int number;                        // Offset:    4 Size:     4
//   float2 dummy;                      // Offset:    8 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBBuffer                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.texcoord.x; v1.y <- input.texcoord.y; 
//   v2.x <- input.color.x; v2.y <- input.color.y; v2.z <- input.color.z; v2.w <- input.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
mov r0.xy, v1.xyxx  // r0.x <- texcoord.x; r0.y <- texcoord.y

#line 8
mov r0.z, cb0[0].y
switch r0.z

#line 10
  case l(0)

#line 12
  itof r0.z, l(1)  // r0.z <- color.w

#line 13
  ge r0.w, r0.x, l(0.250000)
  movc r1.xyz, r0.wwww, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 14
  mov o0.xyz, r1.xyzx
  mov o0.w, r0.z
  ret 

#line 17
  case l(1)

#line 19
  itof r0.z, l(1)  // r0.z <- color.w

#line 20
  ge r0.w, r0.x, l(0.250000)
  movc r0.w, r0.w, l(1.000000), l(0)
  itof r1.x, l(1)
  mov r1.y, -r0.x
  add r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(0.500000)
  movc r1.x, r1.x, l(1.000000), l(0)
  mul r0.w, r0.w, r1.x
  ge r1.x, r0.y, l(0.250000)
  movc r1.x, r1.x, l(1.000000), l(0)
  itof r1.y, l(1)
  mov r1.z, -r0.y
  add r1.y, r1.z, r1.y
  ge r1.y, r1.y, l(0.500000)
  movc r1.y, r1.y, l(1.000000), l(0)
  mul r1.x, r1.y, r1.x
  add r1.xyz, r0.wwww, r1.xxxx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 22
  mov o0.xyz, r1.xyzx  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z
  mov o0.w, r0.z  // o0.w <- <main return value>.w
  ret 

#line 25
  case l(2)

#line 27
  itof r1.xyw, l(0, 0, 0, 1)  // r1.x <- color.x; r1.y <- color.y; r1.w <- color.w
  mov r1.z, l(0.500000)  // r1.z <- color.z

#line 28
  itof r0.z, l(50)
  div r0.z, cb0[0].x, r0.z
  frc r0.z, r0.z  // r0.z <- time

#line 29
  mov r0.w, l(-0.050000)
  add r0.z, r0.w, r0.z
  mul r0.z, r0.z, l(1.500000)  // r0.z <- d1

#line 30
  mov r0.xy, r0.xyxx
  mov r0.z, r0.z

#line 45 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mov r2.xy, l(-0.500000,-0.500000,-0.000000,-0.000000)
  add r2.xy, r0.xyxx, r2.xyxx  // r2.x <- vec.x; r2.y <- vec.y

#line 46
  dp2 r0.w, r2.xyxx, r2.xyxx
  sqrt r0.w, r0.w  // r0.w <- len

#line 47
  ge r0.z, r0.z, r0.w
  movc r0.z, r0.z, l(1.000000), l(0)  // r0.z <- <Circle return value>

#line 30 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  ne r0.z, l(0.000000, 0.000000, 0.000000, 0.000000), r0.z
  if_nz r0.z

#line 32
    itof r1.xyzw, l(0, 0, 0, 0)

#line 33
  endif 

#line 35
  mov o0.xyzw, r1.xyzw  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
  ret 

#line 38
  case l(3)

#line 40
  itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 41
  itof r0.z, l(50)
  div r0.z, cb0[0].x, r0.z
  frc r0.z, r0.z  // r0.z <- time

#line 42
  add r0.z, r0.z, l(0.050000)  // r0.z <- d1

#line 43
  mov r0.xy, r0.xyxx
  mov r0.z, r0.z

#line 45 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mov r2.xy, l(-0.500000,-0.500000,-0.000000,-0.000000)
  add r2.xy, r0.xyxx, r2.xyxx  // r2.x <- vec.x; r2.y <- vec.y

#line 46
  dp2 r0.w, r2.xyxx, r2.xyxx
  sqrt r0.w, r0.w  // r0.w <- len

#line 47
  ge r0.z, r0.z, r0.w
  movc r0.z, r0.z, l(1.000000), l(0)  // r0.z <- <Circle return value>

#line 43 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  ne r0.z, l(0.000000, 0.000000, 0.000000, 0.000000), r0.z
  if_nz r0.z

#line 45
    itof r1.xyw, l(0, 0, 0, 1)
    mov r1.z, l(0.500000)

#line 46
  endif 

#line 48
  mov o0.xyzw, r1.xyzw  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
  ret 

#line 51
  case l(4)

#line 53
  itof r0.z, l(1)  // r0.z <- color.w

#line 54
  mov r0.xy, r0.xyxx
  mov r0.w, l(0.400000)
  mov r1.x, l(0.050000)

#line 54 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mul r1.yz, r0.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000)
  mov r2.xy, l(-1.000000,-1.000000,-0.000000,-0.000000)
  add r1.yz, r1.yyzy, r2.xxyx  // r1.y <- p.x; r1.z <- p.y

#line 55
  itof r1.w, l(2)
  mul r0.w, r0.w, r1.w

#line 56
  dp2 r1.y, r1.yzyy, r1.yzyy
  sqrt r1.y, r1.y
  mov r0.w, -r0.w
  add r0.w, r0.w, r1.y
  mov r1.y, -r0.w
  max r0.w, r0.w, r1.y
  mov r0.w, -r0.w
  add r0.w, r0.w, l(1.000000)
  add r0.w, r1.x, r0.w
  ge r0.w, r0.w, l(0.999900)
  movc r1.xyz, r0.wwww, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r1.z <- <Ring return value>

#line 54 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  mov r1.xyz, r1.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 55
  mov o0.xyz, r1.xyzx  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z
  mov o0.w, r0.z  // o0.w <- <main return value>.w
  ret 

#line 58
  case l(5)

#line 60
  itof r0.z, l(1)  // r0.z <- color.w

#line 61
  mov r0.w, l(10.000000)  // r0.w <- r

#line 62
  itof r1.x, l(100)
  div r1.x, cb0[0].x, r1.x
  frc r1.x, r1.x
  mov r1.y, -r0.w
  mul r1.x, r1.y, r1.x  // r1.x <- d

#line 63
  mov r0.xy, r0.xyxx
  mov r1.x, r1.x
  mov r0.w, r0.w

#line 54 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mul r1.yz, r0.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000)
  mov r2.xy, l(-1.000000,-1.000000,-0.000000,-0.000000)
  add r1.yz, r1.yyzy, r2.xxyx  // r1.y <- p.x; r1.z <- p.y

#line 55
  itof r1.w, l(2)
  mul r1.x, r1.w, r1.x

#line 56
  dp2 r1.y, r1.yzyy, r1.yzyy
  sqrt r1.y, r1.y
  mov r1.x, -r1.x
  add r1.x, r1.x, r1.y
  mov r1.y, -r1.x
  max r1.x, r1.y, r1.x
  mov r1.x, -r1.x
  add r1.x, r1.x, l(1.000000)
  add r0.w, r0.w, r1.x
  ge r0.w, r0.w, l(0.999900)
  movc r1.xyz, r0.wwww, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r1.z <- <Ring return value>

#line 63 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  mov r1.xyz, r1.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 64
  mov o0.xyz, r1.xyzx  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z
  mov o0.w, r0.z  // o0.w <- <main return value>.w
  ret 

#line 67
  case l(6)

#line 69
  itof r0.z, l(1)  // r0.z <- color.w

#line 70
  mov r0.xy, r0.xyxx
  itof r0.w, l(8)
  mov r1.x, l(0.750000)

#line 63 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mov r1.yz, l(-0.000000,-0.500000,-0.500000,-0.000000)
  add r1.yz, r0.xxyx, r1.yyzy  // r1.y <- p.x; r1.z <- p.y

#line 64
  mov r1.w, -r1.z
  max r1.w, r1.w, r1.z
  mov r2.x, -r1.y
  max r2.y, r1.y, r2.x
  min r2.z, r1.w, r2.y
  max r2.w, r1.w, r2.y
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r2.z, r2.w, r2.z
  mul r2.w, r2.z, r2.z
  mul r3.x, r2.w, l(0.020835)
  add r3.x, r3.x, l(-0.085133)
  mul r3.x, r2.w, r3.x
  add r3.x, r3.x, l(0.180141)
  mul r3.x, r2.w, r3.x
  add r3.x, r3.x, l(-0.330299)
  mul r2.w, r2.w, r3.x
  add r2.w, r2.w, l(0.999866)
  mul r2.z, r2.w, r2.z
  lt r1.w, r2.y, r1.w
  mul r2.y, r2.z, l(-2.000000)
  add r2.y, r2.y, l(1.570796)
  and r1.w, r1.w, r2.y
  add r1.w, r2.z, r1.w
  lt r2.x, r1.y, r2.x
  and r2.x, r2.x, l(0xc0490fdb)
  add r1.w, r1.w, r2.x
  min r2.x, r1.y, r1.z
  max r1.y, r1.y, r1.z
  mov r1.z, -r2.x
  lt r1.z, r2.x, r1.z
  mov r2.x, -r1.y
  ge r1.y, r1.y, r2.x
  and r1.y, r1.y, r1.z
  mov r1.z, -r1.w
  movc r1.y, r1.y, r1.z, r1.w  // r1.y <- angle

#line 65
  mul r0.w, r0.w, r1.y
  sincos r0.w, null, r0.w
  ge r0.w, r0.w, r1.x
  movc r1.xyz, r0.wwww, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r1.z <- <Radiation return value>

#line 70 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  mov r1.xyz, r1.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 71
  mov o0.xyz, r1.xyzx  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z
  mov o0.w, r0.z  // o0.w <- <main return value>.w
  ret 

#line 74
  case l(7)

#line 76
  itof r0.z, l(1)  // r0.z <- color.w

#line 77
  itof r0.w, l(1)
  itof r1.x, l(100)
  div r1.x, cb0[0].x, r1.x
  frc r1.x, r1.x
  mov r1.x, -r1.x
  add r0.w, r0.w, r1.x
  mul r0.w, r0.w, l(0.500000)
  add r0.w, r0.w, l(0.750000)  // r0.w <- d

#line 78
  mov r0.xy, r0.xyxx
  itof r1.x, l(8)
  mov r0.w, r0.w

#line 63 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mov r1.yz, l(-0.000000,-0.500000,-0.500000,-0.000000)
  add r1.yz, r0.xxyx, r1.yyzy  // r1.y <- p.x; r1.z <- p.y

#line 64
  mov r1.w, -r1.z
  max r1.w, r1.w, r1.z
  mov r2.x, -r1.y
  max r2.y, r1.y, r2.x
  min r2.z, r1.w, r2.y
  max r2.w, r1.w, r2.y
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r2.z, r2.w, r2.z
  mul r2.w, r2.z, r2.z
  mul r3.x, r2.w, l(0.020835)
  add r3.x, r3.x, l(-0.085133)
  mul r3.x, r2.w, r3.x
  add r3.x, r3.x, l(0.180141)
  mul r3.x, r2.w, r3.x
  add r3.x, r3.x, l(-0.330299)
  mul r2.w, r2.w, r3.x
  add r2.w, r2.w, l(0.999866)
  mul r2.z, r2.w, r2.z
  lt r1.w, r2.y, r1.w
  mul r2.y, r2.z, l(-2.000000)
  add r2.y, r2.y, l(1.570796)
  and r1.w, r1.w, r2.y
  add r1.w, r2.z, r1.w
  lt r2.x, r1.y, r2.x
  and r2.x, r2.x, l(0xc0490fdb)
  add r1.w, r1.w, r2.x
  min r2.x, r1.y, r1.z
  max r1.y, r1.y, r1.z
  mov r1.z, -r2.x
  lt r1.z, r2.x, r1.z
  mov r2.x, -r1.y
  ge r1.y, r1.y, r2.x
  and r1.y, r1.y, r1.z
  mov r1.z, -r1.w
  movc r1.y, r1.y, r1.z, r1.w  // r1.y <- angle

#line 65
  mul r1.x, r1.x, r1.y
  sincos r1.x, null, r1.x
  ge r0.w, r1.x, r0.w
  movc r1.xyz, r0.wwww, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r1.z <- <Radiation return value>

#line 78 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  mov r1.xyz, r1.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 79
  mov o0.xyz, r1.xyzx  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z
  mov o0.w, r0.z  // o0.w <- <main return value>.w
  ret 

#line 82
  case l(8)

#line 84
  itof r1.xyz, l(1, 1, 1, 0)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 85
  itof r0.z, l(60)
  div r0.z, cb0[0].x, r0.z
  frc r0.z, r0.z  // r0.z <- time

#line 86
  mov r0.w, l(0.050000)  // r0.w <- r

#line 87
  add r1.w, r0.w, r0.z
  mul r1.w, r1.w, l(2.000000)  // r1.w <- d1

#line 88
  mul r2.x, r0.z, l(2.000000)
  sincos r2.x, null, r2.x
  mul r2.x, r2.x, l(2.000000)
  mul r2.x, r2.x, l(0.300000)
  add r2.x, r2.x, l(0.750000)  // r2.x <- d2

#line 89
  mov r0.xy, r0.xyxx
  mov r1.w, r1.w
  mov r0.w, r0.w

#line 54 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mul r2.yz, r0.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000)
  mov r3.xy, l(-1.000000,-1.000000,-0.000000,-0.000000)
  add r2.yz, r2.yyzy, r3.xxyx  // r2.y <- p.x; r2.z <- p.y

#line 55
  itof r2.w, l(2)
  mul r2.w, r1.w, r2.w  // r2.w <- size

#line 56
  dp2 r2.y, r2.yzyy, r2.yzyy
  sqrt r2.y, r2.y
  mov r2.z, -r2.w
  add r2.y, r2.z, r2.y
  mov r2.z, -r2.y
  max r2.y, r2.z, r2.y
  mov r2.y, -r2.y
  add r2.y, r2.y, l(1.000000)
  add r0.w, r0.w, r2.y
  ge r0.w, r0.w, l(0.999900)
  movc r0.w, r0.w, l(1.000000), l(0)  // r0.w <- <Ring return value>

#line 89 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  mov r0.xy, r0.xyxx
  mov r1.w, r1.w

#line 45 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mov r2.yz, l(-0.000000,-0.500000,-0.500000,-0.000000)
  add r2.yz, r0.xxyx, r2.yyzy  // r2.y <- vec.x; r2.z <- vec.y

#line 46
  dp2 r2.y, r2.yzyy, r2.yzyy
  sqrt r2.y, r2.y  // r2.y <- len

#line 47
  ge r1.w, r1.w, r2.y
  movc r1.w, r1.w, l(1.000000), l(0)  // r1.w <- <Circle return value>

#line 89 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  mov r0.xy, r0.xyxx
  itof r2.y, l(4)
  mov r2.x, r2.x
  mul r0.z, r0.z, l(3.140000)

#line 72 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive.hlsli"
  mov r2.zw, l(-0.000000,-0.000000,-0.500000,-0.500000)
  add r2.zw, r0.xxxy, r2.zzzw  // r2.z <- p.x; r2.w <- p.y

#line 73
  mov r3.x, -r2.w
  max r3.x, r2.w, r3.x
  mov r3.y, -r2.z
  max r3.z, r2.z, r3.y
  min r3.w, r3.z, r3.x
  max r4.x, r3.z, r3.x
  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r3.w, r3.w, r4.x
  mul r4.x, r3.w, r3.w
  mul r4.y, r4.x, l(0.020835)
  add r4.y, r4.y, l(-0.085133)
  mul r4.y, r4.y, r4.x
  add r4.y, r4.y, l(0.180141)
  mul r4.y, r4.y, r4.x
  add r4.y, r4.y, l(-0.330299)
  mul r4.x, r4.y, r4.x
  add r4.x, r4.x, l(0.999866)
  mul r3.w, r3.w, r4.x
  lt r3.x, r3.z, r3.x
  mul r3.z, r3.w, l(-2.000000)
  add r3.z, r3.z, l(1.570796)
  and r3.x, r3.x, r3.z
  add r3.x, r3.w, r3.x
  lt r3.y, r2.z, r3.y
  and r3.y, r3.y, l(0xc0490fdb)
  add r3.x, r3.y, r3.x
  min r3.y, r2.z, r2.w
  max r2.z, r2.z, r2.w
  mov r2.w, -r3.y
  lt r2.w, r3.y, r2.w
  mov r3.y, -r2.z
  ge r2.z, r2.z, r3.y
  and r2.z, r2.z, r2.w
  mov r2.w, -r3.x
  movc r2.z, r2.z, r2.w, r3.x  // r2.z <- angle

#line 74
  add r0.z, r0.z, r2.z
  mul r0.z, r2.y, r0.z
  sincos r0.z, null, r0.z
  ge r0.z, r0.z, r2.x
  movc r0.z, r0.z, l(1.000000), l(0)  // r0.z <- <Radiation return value>

#line 89 "E:\就職作品\ライブラリ\Game\HLSL\2DPrimitive_ps.hlsl"
  mul r0.z, r0.z, r1.w
  add r0.z, r0.z, r0.w  // r0.z <- color.w

#line 90
  itof r0.w, l(1)
  mov r2.xy, l(-0.500000,-0.500000,-0.000000,-0.000000)
  add r0.xy, r0.xyxx, r2.xyxx
  dp2 r0.x, r0.xyxx, r0.xyxx
  sqrt r0.x, r0.x
  mov r0.x, -r0.x
  add r0.x, r0.x, r0.w
  mov r0.y, l(-0.500000)
  add r0.x, r0.y, r0.x
  lt r0.x, r0.x, l(0.000000)
  and r0.x, r0.x, l(-1)
  discard_nz r0.x

#line 92
  mov o0.xyz, r1.xyzx  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z
  mov o0.w, r0.z  // o0.w <- <main return value>.w
  ret   // r0.x <- texcoord.x; r0.y <- texcoord.y

#line 95
  default 
  break 
endswitch 

#line 96
itof o0.xyzw, l(1, 1, 1, 1)  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
ret 
// Approximately 348 instruction slots used
